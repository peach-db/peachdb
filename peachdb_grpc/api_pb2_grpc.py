# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import api_pb2 as api__pb2
import grpc  # type: ignore


class BotServiceStub(object):
    """The service definition"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBot = channel.unary_unary(
            "/peachdb.BotService/CreateBot",
            request_serializer=api__pb2.CreateBotRequest.SerializeToString,
            response_deserializer=api__pb2.CreateBotResponse.FromString,
        )
        self.CreateConversation = channel.unary_stream(
            "/peachdb.BotService/CreateConversation",
            request_serializer=api__pb2.CreateConversationRequest.SerializeToString,
            response_deserializer=api__pb2.CreateConversationResponse.FromString,
        )
        self.ContinueConversation = channel.unary_stream(
            "/peachdb.BotService/ContinueConversation",
            request_serializer=api__pb2.ContinueConversationRequest.SerializeToString,
            response_deserializer=api__pb2.ContinueConversationResponse.FromString,
        )


class BotServiceServicer(object):
    """The service definition"""

    def CreateBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ContinueConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BotServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateBot": grpc.unary_unary_rpc_method_handler(
            servicer.CreateBot,
            request_deserializer=api__pb2.CreateBotRequest.FromString,
            response_serializer=api__pb2.CreateBotResponse.SerializeToString,
        ),
        "CreateConversation": grpc.unary_stream_rpc_method_handler(
            servicer.CreateConversation,
            request_deserializer=api__pb2.CreateConversationRequest.FromString,
            response_serializer=api__pb2.CreateConversationResponse.SerializeToString,
        ),
        "ContinueConversation": grpc.unary_stream_rpc_method_handler(
            servicer.ContinueConversation,
            request_deserializer=api__pb2.ContinueConversationRequest.FromString,
            response_serializer=api__pb2.ContinueConversationResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("peachdb.BotService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class BotService(object):
    """The service definition"""

    @staticmethod
    def CreateBot(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/peachdb.BotService/CreateBot",
            api__pb2.CreateBotRequest.SerializeToString,
            api__pb2.CreateBotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateConversation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/peachdb.BotService/CreateConversation",
            api__pb2.CreateConversationRequest.SerializeToString,
            api__pb2.CreateConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ContinueConversation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/peachdb.BotService/ContinueConversation",
            api__pb2.ContinueConversationRequest.SerializeToString,
            api__pb2.ContinueConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
